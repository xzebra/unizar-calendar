{"version":3,"sources":["localeBundles.js","i18nextInit.js","Popup.js","ErrorPopup.js","GuidePopup.js","HourEditor.js","DataContextMenu.js","InputTable.js","CalendarForm.js","WarningPopup.js","index.js"],"names":["bundles","en","es","availableLocales","Object","keys","backendOptions","loadPath","request","options","url","payload","callback","split","lng","locale","then","data","default","catch","err","console","error","Promise","resolve","enBundle","JSON","stringify","status","e","i18n","use","LanguageDetector","HttpApi","initReactI18next","init","fallbackLng","debug","whitelist","detection","order","lookupCookie","lookupLocalStorage","caches","excludeCacheFor","checkWhitelist","interpolation","escapeValue","backend","Popup","title","children","className","type","aria-label","onClick","PopupboxManager","close","ErrorPopup","map","i","key","GuidePopup","result","exportType","t","useTranslation","HourEditor","props","handleChangeComplete","setState","hour","formatted24","onCommit","state","value","label","this","ReactDOM","findDOMNode","getElementsByTagName","time","onChange","React","Component","ContextMenu","Menu","MenuItem","SubMenu","DataContextMenu","idx","id","rowIdx","onRowDelete","onRowInsertAbove","onRowInsertBelow","insertRow","defaultEmptyRow","rows","newRow","nextRows","splice","ContextMenuTrigger","InputTable","tooltip","startingRows","defaultRow","cols","useState","values","setValues","htmlFor","toLowerCase","OverlayTrigger","placement","overlay","Tooltip","icon","faQuestionCircle","name","columns","rowGetter","rowsCount","length","onGridRowsUpdated","fromRow","toRow","updated","r","slice","enableCellSelect","minHeight","contextMenu","deleteRow","RowsContainer","DropDownEditor","Editors","Form","styled","form","defaultColumnProperties","editable","columnTooltipRenderer","column","BoolEditor","schedulesRows","weekday","class_id","start_hour","end_hour","is_practical","tableToCSV","columnData","tableData","x","join","entries","CalendarForm","subjectsColumns","headerRenderer","c","subjectsRows","class_name","class_desc","tableTooltip","isMobile","schedulesColumns","editor","useForm","register","handleSubmit","subjects","setSubjects","schedules","setSchedules","calendarData1","setCalendarData1","calendarData2","setCalendarData2","setResult","useEffect","fetch","process","response","text","onSubmit","subjectsData","schedulesData","semester","parseInt","res","window","calendar","Error","content","message","open","config","fadeIn","fadeInSpeed","renderErrorPopup","blob","Blob","fileDownload","renderGuidePopup","ref","WarningPopup","warningID","Centered","div","App","a","go","Go","source","arrayBuffer","buffer","WebAssembly","instantiate","importObject","instance","run","runGolangInstance","renderWarningPopup","fallback","Loader","render","I18nextProvider","i18next","document","getElementById"],"mappings":"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","file":"static/js/main.df67bbcd.chunk.js","sourcesContent":["/**\n * The bundles here are configured so that each locale only requires loading a single webpack chunk.\n */\n\nconst bundles = {\n    en: () => import(/* webpackChunkName: \"en\" */ './locales/en.json'),\n    es: () => import(/* webpackChunkName: \"es\" */ './locales/es.json'),\n};\n\n// generate whitelist for i18next\nexport const availableLocales = Object.keys(bundles);\n\nexport default bundles;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\n\nimport bundles, { availableLocales } from './localeBundles';\nimport enBundle from './locales/en.json';\n\nconst DEFAULT_LOCALE = 'en';\n\n// load the right bundle depending on the requested locale\n// option to include a default locale so it's always bundled and can be used as fallback\nfunction loadLocaleBundle(locale) {\n    if (locale !== DEFAULT_LOCALE) {\n        return bundles[locale]()\n            .then(data => data.default) // ES6 default import\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n    return Promise.resolve(enBundle);\n}\n\nconst langDetectorOptions = {\n    // order and from where user language should be detected\n    order: ['cookie', 'localStorage', 'navigator'],\n\n    // keys or params to lookup language from\n    lookupCookie: 'locale',\n    lookupLocalStorage: 'locale',\n\n    // cache user language on\n    caches: ['localStorage', 'cookie'],\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n    // only detect languages that are in the whitelist\n    checkWhitelist: true,\n};\n\nconst backendOptions = {\n    loadPath: '{{lng}}|{{ns}}', // used to pass language and namespace to custom XHR function\n    request: (options, url, payload, callback) => {\n        // instead of loading from a URL like i18next-http-backend is intended for, we repurpose this plugin to\n        // load webpack chunks instead by overriding the default request behavior\n        // it's easier to use webpack in our current CRA to dynamically import a JSON with the translations\n        // than to update and serve a static folder with JSON files on the CDN with cache invalidation\n        try {\n            const [lng] = url.split('|');\n\n            // this mocks the HTTP fetch plugin behavior so it works with the backend AJAX pattern in this XHR library\n            // https://github.com/i18next/i18next-http-backend/blob/master/lib/request.js#L56\n            loadLocaleBundle(lng).then((data) => {\n                callback(null, {\n                    data: JSON.stringify(data),\n                    status: 200, // status code is required by XHR plugin to determine success or failure\n                });\n            });\n        } catch (e) {\n            console.error(e);\n            callback(null, {\n                status: 500,\n            });\n        }\n    },\n};\n\ni18n\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // use HTTP backend to async load translated strings\n    .use(HttpApi)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: DEFAULT_LOCALE,\n        debug: true,\n        whitelist: availableLocales, // available languages for browser dector to pick from\n        detection: langDetectorOptions,\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        backend: backendOptions\n    });\n\n\nexport default i18n;\n","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\n\nexport default function Popup({ title, children }) {\n    return (\n        <div className=\"row g-2\">\n            <div className=\"d-flex justify-content-between col-12\">\n                <div>\n                    <h2 className=\"popup-title\">{title}</h2>\n                </div>\n                <div className=\"d-flex\">\n                    <button\n                        type=\"button\"\n                        className=\"btn-close my-auto\"\n                        aria-label=\"Close\"\n                        onClick={PopupboxManager.close}\n                    >\n                    </button>\n                </div>\n            </div>\n            <div className=\"col-12\">\n                {children}\n            </div>\n        </div >\n    );\n};\n","import React from \"react\";\nimport { PopupboxManager } from \"react-popupbox\";\nimport Popup from './Popup'\n\nfunction ErrorPopup({ err }) {\n    return (\n        <Popup title=\"Error\">\n            {err.split(\"\\n\").map((i, key) => {\n                return <p key={key}>{i}</p>;\n            })}\n        </Popup>\n    );\n};\n\nexport default function renderErrorPopup(err) {\n    const content = <ErrorPopup\n        err={err.message}\n    />;\n    PopupboxManager.open({\n        content,\n        config: {\n            fadeIn: true,\n            fadeInSpeed: 400\n        }\n    })\n}\n","import React from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { PopupboxManager } from \"react-popupbox\";\nimport ReactMarkdown from 'react-markdown';\nimport Popup from './Popup'\n\nfunction GuidePopup({ result, exportType }) {\n    const { t } = useTranslation();\n    return (\n        <Popup title={t('guides.title')}>\n            <div className=\"col-12\">\n                <ReactMarkdown className=\"line-break\">\n                    {t('guides.' + exportType)}\n                </ReactMarkdown>\n            </div>\n        </Popup>\n    );\n};\n\nexport default function renderGuidePopup(res, exportType) {\n    const content = <GuidePopup\n        result={res}\n        exportType={exportType}\n    />;\n    PopupboxManager.open({\n        content,\n        config: {\n            fadeIn: true,\n            fadeInSpeed: 400\n        }\n    })\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport ReactDataGrid from 'react-data-grid';\nimport TimeKeeper from 'react-timekeeper';\n\nclass HourEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hour: props.value };\n        this.label = props.label;\n    }\n\n    getValue() {\n        return { [this.label]: this.state.hour };\n    }\n\n    getInputNode() {\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\n    }\n\n    handleChangeComplete = data => {\n        this.setState({ hour: data.formatted24 }, () => this.props.onCommit());\n    };\n\n    render() {\n        return (\n            <TimeKeeper\n                time={this.state.hour}\n                onChange={this.handleChangeComplete}\n            />\n        );\n    }\n}\n\nexport default HourEditor;\n","import React from \"react\";\nimport { Menu } from \"react-data-grid-addons\";\nconst { ContextMenu, MenuItem, SubMenu } = Menu;\n\nexport default function DataContextMenu({\n    idx,\n    id,\n    rowIdx,\n    onRowDelete,\n    onRowInsertAbove,\n    onRowInsertBelow\n}) {\n    return (\n        <ContextMenu id={id}>\n            <MenuItem data={{ rowIdx, idx }} onClick={onRowDelete}>\n                Delete Row\n            </MenuItem>\n            <SubMenu title=\"Insert Row\">\n                <MenuItem data={{ rowIdx, idx }} onClick={onRowInsertAbove}>\n                    Above\n                </MenuItem>\n                <MenuItem data={{ rowIdx, idx }} onClick={onRowInsertBelow}>\n                    Below\n                </MenuItem>\n            </SubMenu>\n        </ContextMenu>\n    );\n}\n\nexport const deleteRow = (rowIdx, defaultEmptyRow) => rows => {\n    const nextRows = [...rows];\n    if (nextRows.length === 1) {\n        const newRow = defaultEmptyRow;\n        nextRows.splice(rowIdx, 1, newRow);\n    } else {\n        nextRows.splice(rowIdx, 1);\n    }\n    return nextRows;\n};\n\nexport const insertRow = (rowIdx, defaultEmptyRow) => rows => {\n    const newRow = defaultEmptyRow;\n    const nextRows = [...rows];\n    nextRows.splice(rowIdx, 0, newRow);\n    return nextRows;\n};\n","import React, { useEffect, useState } from 'react';\n\nimport ReactDataGrid from 'react-data-grid';\n\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport { Editors, Menu } from \"react-data-grid-addons\";\nimport DataContextMenu, { deleteRow, insertRow } from './DataContextMenu';\nconst { ContextMenuTrigger } = Menu;\n\nexport default function InputTable({ title, tooltip, startingRows, defaultRow, cols, onChange }) {\n    const [values, setValues] = useState(startingRows);\n\n    const onTableUpdated = ({ fromRow, toRow, updated }) => {\n        const r = values.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n            r[i] = { ...r[i], ...updated };\n        }\n        setValues(r);\n\n        // Callback\n        onChange(r);\n    };\n\n    return (\n        <div className=\"col-12\">\n            <label htmlFor={title.toLowerCase()} className=\"form-label\">{title}</label>\n            <OverlayTrigger\n                placement=\"auto\"\n                overlay={<Tooltip>{tooltip}</Tooltip>}\n            >\n                <FontAwesomeIcon className=\"ms-1\" icon={faQuestionCircle} />\n            </OverlayTrigger>\n            <ReactDataGrid\n                name={title.toLowerCase()}\n                columns={cols}\n                rowGetter={i => values[i]}\n                rowsCount={values.length}\n                onGridRowsUpdated={onTableUpdated}\n                enableCellSelect={true}\n                minHeight={150}\n                contextMenu={\n                    <DataContextMenu\n                        id={title.toLowerCase() + \"ContextMenu\"}\n                        onRowDelete={(e, { rowIdx }) => setValues(deleteRow(rowIdx, defaultRow))}\n                        onRowInsertAbove={(e, { rowIdx }) => setValues(insertRow(rowIdx, defaultRow))}\n                        onRowInsertBelow={(e, { rowIdx }) => setValues(insertRow(rowIdx + 1, defaultRow))}\n                    />\n                }\n                RowsContainer={ContextMenuTrigger}\n            />\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { isMobile } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\n\nimport styled from \"styled-components\";\n\nimport \"react-popupbox/dist/react-popupbox.css\"\nimport renderErrorPopup from './ErrorPopup'\nimport renderGuidePopup from './GuidePopup'\n\nimport fileDownload from 'js-file-download';\n\nimport HourEditor from './HourEditor';\nimport InputTable from './InputTable';\n\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport { Editors } from \"react-data-grid-addons\";\nconst { DropDownEditor } = Editors;\n\nconst Form = styled.form`\n  justify-content: center;\n  width: 80%;\n`\n\nconst defaultColumnProperties = {\n  editable: true,\n};\n\nconst columnTooltipRenderer = (value) => {\n  return (\n    <span>\n      {value.column.name}\n\n      <OverlayTrigger\n        placement=\"auto\"\n        overlay={<Tooltip>{value.column.tooltip}</Tooltip>}\n      >\n        <FontAwesomeIcon className=\"ms-1\" icon={faQuestionCircle} />\n      </OverlayTrigger>\n    </span>\n  );\n}\n\nconst BoolEditor = <DropDownEditor options={[\n  { id: \"true\", value: \"True\" },\n  { id: \"false\", value: \"False\" },\n]} />\n\nconst schedulesRows = [\n  {\n    weekday: 'Lx',\n    class_id: 'ia',\n    start_hour: '18:00',\n    end_hour: '18:50',\n    is_practical: \"True\",\n  },\n  {\n    weekday: 'La',\n    class_id: 'ia',\n    start_hour: '19:00',\n    end_hour: '19:50',\n    is_practical: \"False\",\n  },\n];\n\nfunction tableToCSV(columnData, tableData) {\n  // I'm sorry if you are reading this, but I was feeling a bit\n  // functional today.\n\n  return columnData.map(x => x.key).join(';') +\n    '\\n' +\n    tableData.map(x => Object.entries(x).map(x => x[1]).join(';')).join('\\n');\n}\n\nexport default function CalendarForm() {\n  const { t } = useTranslation();\n  const subjectsColumns = [\n    {\n      key: 'class_id',\n      name: t('tables.subjects.id'),\n      tooltip: t('tables.subjects.id_tooltip'),\n      headerRenderer: columnTooltipRenderer\n    },\n    { key: 'class_name', name: t('tables.subjects.name') },\n    { key: 'class_desc', name: t('tables.subjects.desc') },\n  ].map(c => ({ ...c, ...defaultColumnProperties }));\n\n  const subjectsRows = [\n    { class_id: 'ia', class_name: 'Inteligencia Artificial', class_desc: 'algo' },\n    { class_id: 'ssdd', class_name: 'Sistemas Distribuidos', class_desc: 'otro' },\n  ]\n\n  const tableTooltip = (isMobile ? t('tables.tooltip.mobile') : t('tables.tooltip.web'));\n\n  // weekday;class_id;start_hour;end_hour;is_practical\n  const schedulesColumns = [\n    { key: 'weekday', name: t('tables.schedules.weekday') },\n    {\n      key: 'class_id',\n      name: t('tables.schedules.subject_id'),\n      tooltip: t('tables.schedules.subject_id_tooltip'),\n      headerRenderer: columnTooltipRenderer\n    },\n    { key: 'start_hour', name: t('tables.schedules.start_hour'), editor: <HourEditor label=\"start_hour\" /> },\n    { key: 'end_hour', name: t('tables.schedules.end_hour'), editor: <HourEditor label=\"end_hour\" /> },\n    {\n      key: 'is_practical',\n      name: t('tables.schedules.is_practical'),\n      editor: BoolEditor,\n      tooltip: t('tables.schedules.is_practical_tooltip'),\n      headerRenderer: columnTooltipRenderer\n    },\n  ].map(c => ({ ...c, ...defaultColumnProperties }));\n\n  const { register, handleSubmit } = useForm();\n  const [subjects, setSubjects] = useState(subjectsRows);\n  const [schedules, setSchedules] = useState(schedulesRows);\n  const [calendarData1, setCalendarData1] = useState(\"\");\n  const [calendarData2, setCalendarData2] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/data/semester1.json')\n      .then(response => response.text())\n      .then(data => setCalendarData1(data));\n    fetch(process.env.PUBLIC_URL + '/data/semester2.json')\n      .then(response => response.text())\n      .then(data => setCalendarData2(data));\n  }, []);\n\n  const onSubmit = data => {\n    const subjectsData = tableToCSV(subjectsColumns, subjects);\n    const schedulesData = tableToCSV(schedulesColumns, schedules);\n\n    // Cast semester to integer so Golang can use it.\n    data.semester = parseInt(data.semester);\n\n    const res = window.calendar(\n      data.semester,\n      subjectsData,\n      schedulesData,\n      data.exportType,\n      (data.semester === 1 ? calendarData1 : calendarData2),\n    );\n\n    if (res instanceof Error) {\n      renderErrorPopup(res);\n      return;\n    }\n\n    setResult(res);\n\n    let blob = new Blob([res], {\n      type: 'text/plain'\n    });\n\n    fileDownload(blob, \"calendar.\" + data.exportType);\n\n    if (data.exportType == \"ics\" || data.exportType == \"csv\") {\n      renderGuidePopup(res, data.exportType);\n    }\n  }\n\n  const onSubjectsUpdated = ({ fromRow, toRow, updated }) => {\n    const r = subjects.slice();\n    for (let i = fromRow; i <= toRow; i++) {\n      r[i] = { ...r[i], ...updated };\n    }\n    setSubjects(r);\n  };\n\n  const onSchedulesUpdated = ({ fromRow, toRow, updated }) => {\n    const r = schedules.slice();\n    for (let i = fromRow; i <= toRow; i++) {\n      r[i] = { ...r[i], ...updated };\n    }\n    setSchedules(r);\n  };\n\n  const defaultSubjectsRow = { class_id: '', class_name: '', class_desc: '' };\n\n  const defaultSchedulesRow = {\n    weekday: 'Lx',\n    class_id: '',\n    start_hour: '00:00',\n    end_hour: '00:00',\n    is_practical: \"False\",\n  };\n\n  /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n  return (\n    <Form className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n      <InputTable\n        title={t('form.subjects')}\n        tooltip={tableTooltip}\n        startingRows={subjectsRows}\n        defaultRow={defaultSubjectsRow}\n        cols={subjectsColumns}\n        onChange={setSubjects}\n      />\n\n      <InputTable\n        title={t('form.schedules')}\n        tooltip={tableTooltip}\n        startingRows={schedulesRows}\n        defaultRow={defaultSchedulesRow}\n        cols={schedulesColumns}\n        onChange={setSchedules}\n      />\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"semester\" className=\"form-label\">{t('form.semester')}</label>\n        <select type=\"number\" name=\"semester\" className=\"form-select\" ref={register}>\n          <option value={1}>{t('semester.first_semester')}</option>\n          <option value={2}>{t('semester.second_semester')}</option>\n        </select>\n      </div>\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"exportType\" className=\"form-label\">{t('form.export_type')}</label>\n        <select name=\"exportType\" className=\"form-select\" ref={register}>\n          <option value=\"ics\">{t('form.export_types.ics')}</option>\n          <option value=\"csv\">{t('form.export_types.csv')}</option>\n          <option value=\"org\">{t('form.export_types.org')}</option>\n        </select>\n      </div>\n\n      <div className=\"col-md-4\">\n        <input\n          type=\"submit\"\n          className=\"w-100 btn btn-primary btn-lg\"\n          value={t('form.submit')} />\n      </div>\n    </Form >\n  );\n}\n","import React from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { PopupboxManager } from \"react-popupbox\";\nimport ReactMarkdown from 'react-markdown';\nimport Popup from './Popup'\n\nfunction WarningPopup({ warningID }) {\n  const { t } = useTranslation();\n  return (\n    <Popup title={t('warning.title')}>\n      <div className=\"col-12\">\n        <ReactMarkdown className=\"line-break\">\n          {t('warning.' + warningID)}\n        </ReactMarkdown>\n      </div>\n    </Popup>\n  );\n};\n\nexport default function renderWarningPopup(warningID) {\n  const content = <WarningPopup\n    warningID={warningID}\n  />;\n  PopupboxManager.open({\n    content,\n    config: {\n      fadeIn: true,\n      fadeInSpeed: 400\n    }\n  })\n}\n","import React, { useEffect, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTranslation, Trans, I18nextProvider } from 'react-i18next';\nimport { PopupboxManager, PopupboxContainer } from \"react-popupbox\";\nimport styled from \"styled-components\";\n\nimport i18next from './i18nextInit';\n\nimport CalendarForm from './CalendarForm';\nimport './index.css';\n\nimport renderWarningPopup from './WarningPopup'\n\nconst Centered = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nfunction App() {\n  // Run like componentDidMount\n  useEffect(() => {\n    async function runGolangInstance() {\n      // Run golang instance\n      const go = new window.Go();\n      const source = await fetch(process.env.PUBLIC_URL + \"/calendar.wasm\");\n      const buffer = await source.arrayBuffer();\n\n      let { instance } = await WebAssembly.instantiate(buffer, go.importObject)\n      await go.run(instance)\n    }\n\n    runGolangInstance();\n\n    // FIXME: Temporarily tell the users about the current problems\n    renderWarningPopup(\"inconsistent\");\n  }, []);\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Centered>\n        <PopupboxContainer />\n        <CalendarForm />\n      </Centered >\n    </Suspense>\n  );\n}\n\nconst Loader = () => (\n  <div className=\"App\">\n    <div>Loading...</div>\n  </div>\n);\n\nReactDOM.render(\n  <I18nextProvider i18n={i18next}>\n    <App />\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}